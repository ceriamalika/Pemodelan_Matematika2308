# -*- coding: utf-8 -*-
"""Model SIR (Kelahiran & Kematian)_Tugas 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gn7pG09GeR7xvQfq5BaJx3v2FDIqMfHe
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

# Parameter
N = 1000   # Total populasi
alpha = 0.02  # Laju kelahiran
beta = 0.2   # Laju infeksi
gamma = 0.1  # Laju pemulihan
sigma = 0.01  # Laju kematian

# Kondisi Awal
I0 = 1  # Individu yang terinfeksi pada awal
S0 = N - 1  # Semua individu rentan kecuali 1 yang terinfeksi
R0 = 0  # TIdak ada yang sembuh pada awalnya

# Waktu simulasi (dalam hari)
t = np.linspace(0, 160, 160)  # Simulasi selama 160 hari

# Model SIR
def sir_birth_death(y, t, alpha, beta, gamma, sigma, N):
    S, I, R = y
    dSdt = alpha * N - (beta * S * I / N) - sigma * S
    dIdt = (beta * S * I / N) - gamma * I - sigma * I
    dRdt = gamma * I - sigma * R
    return [dSdt, dIdt, dRdt]

# Menyelesaikan sistem persamaan diferensial
y0 = [S0, I0, R0]
solution = odeint(sir_birth_death, y0, t, args=(alpha, beta, gamma, sigma, N))
S, I, R = solution.T

# Plot hasil simulasi
plt.figure(figsize=(10,5))
plt.plot(t, S, label="Susceptible", color='blue')
plt.plot(t, I, label="Infected", color='red')
plt.plot(t, R, label="Recovered", color='green')
plt.xlabel("Waktu (hari)")
plt.ylabel("Jumlah Individu")
plt.title("Model SIR dengan Kelahiran dan Kematian")
plt.legend()
plt.grid()
plt.show()